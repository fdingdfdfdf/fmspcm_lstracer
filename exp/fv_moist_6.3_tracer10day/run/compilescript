#!/bin/csh -f

set run_name     = test                              # label for run; output dir and working dir are run_name specific
set run_script   = $cwd/run_${run_name}              # path/name of this run script (for resubmit)
set exp_home     = $cwd:h                            # directory containing run/$run_script and input/
set exp_name     = $exp_home:t                       # name of experiment (i.e., name of this model build)
set fms_home     = $cwd:h:h:h  #/idealized_moist        # directory containing model source code, etc, usually /home/$USER/fms/idealized_moist

# set initial directory structure
set fms_tmp     = /n/scratchlfs02/wordsworth_lab/fding/fms_tmp
set fms_output  = /n/scratchlfs02/wordsworth_lab/fding/fms_output
set scratch_dir = /n/scratchlfs02/wordsworth_lab/fding/${exp_name}/${run_name}  # scratch directory on specific compute node (faster read/write)
#set fms_tmp     = /n/wordsworth_lab/fding/fms_tmp
#set fms_output  = /n/wordsworth_lab/fding/fms_output
#set scratch_dir = /n/wordsworth_lab/fding/${exp_name}/${run_name}  # scratch directory on specific compute node (faster read/write)
if ( ! -d $fms_tmp )    mkdir -p $fms_tmp
if ( ! -d $fms_output ) mkdir -p $fms_output

cd $exp_home

# define variables
set tmpdir      = $fms_tmp/${exp_name}                    # temporary directory for model workdir, output, etc
set run_dir     = $tmpdir/$run_name                       # tmp directory for current run
set workdir     = $run_dir/workdir                        # where model is run and model output is produced
set output_dir  = $run_dir/output                         # output directory will be created here

set platform    = ifc                                     # a unique identifier for your platform
# note the following init_cond's are overwritten later if reload_commands exists
set init_cond   = ""
#set init_cond   = /n/regal/wordsworth_lab/fding/fms_tmp/fv_cubed_2_gray_iter/test/output/restart/day3400h00.cpio
#set init_cond = $cwd/run/day0250h00.cpio

set pathnames   = $exp_home/input/path_names              # path to file containing list of source paths
set namelist    = $exp_home/input/namelists               # path to namelist file
set fieldtable  = $exp_home/input/field_table             # path to field table (specifies tracers)
set execdir     = $tmpdir/exe.fms                         # where code is compiled and executable is created
set diagtable   = $exp_home/input/diag_table              # path to diagnostics table
set mppnccombine = $tmpdir/mppnccombine.$platform         # path to executable mppnccombine
set template    = $fms_home/bin/mkmf.template.${platform} # path to template for your platform
set mkmf        = $fms_home/bin/mkmf                      # path to executable mkmf
set sourcedir   = $fms_home/src                           # path to directory containing model source code
set time_stamp  = $fms_home/bin/time_stamp.csh            # generates string date for file name labels
setenv PPDIR  $fms_home/postprocessing     # path to directory containing postprocessing source code and grid data for fregrid_parallel

#set scratch_dir = /n/scratchlfs/wordsworth_lab/fding/${exp_name}/${run_name}  # scratch directory on specific compute node (faster read/write)
set input_dir   = ${scratch_dir}/combine                  # directory where combined netcdf files are written
set data_expdir = $fms_output/$exp_name                   # path to output directory per experiment
set data_dir    = $fms_output/$exp_name/$run_name         # path to output directory per run

#--------------------------------------------------------------------------------------------------------

# setup directory structure
if ( ! -d $execdir ) mkdir -p $execdir
if ( ! -d $run_dir ) mkdir -p $run_dir
if ( ! -e $workdir ) then
  mkdir $workdir $workdir/INPUT $workdir/RESTART
else
  rm -rf $workdir
  mkdir $workdir $workdir/INPUT $workdir/RESTART
  echo "WARNING: Existing workdir $workdir removed."
endif

if ( ! -d $output_dir )  then
  mkdir -p $output_dir
  mkdir -p $output_dir/combine
  mkdir -p $output_dir/logfiles
  mkdir -p $output_dir/restart
endif

if ( ! -d  $data_expdir )  mkdir -p $data_expdir
if ( ! -d  $data_dir ) then
  mkdir -p $data_dir
  mkdir -p $data_dir/history
  mkdir -p $data_dir/logfiles
  mkdir -p $data_dir/restart
endif

#--------------------------------------------------------------------------------------------------------

# compile mppnccombine.c, needed only if $npes > 1
if ( ! -f $mppnccombine ) then
  gcc -O -o $mppnccombine -I$fms_home/bin/nc_inc -L$fms_home/bin/nc_lib $fms_home/postprocessing/mppnccombine.c -lnetcdf
endif

#--------------------------------------------------------------------------------------------------------

# compile the model code and create executable

# append fms_home (containing netcdf libraries and include files) to template
/bin/cp $template $workdir/tmp_template
echo "fms_home = $fms_home" >> $workdir/tmp_template

# Prepend fortran files in srcmods directory to pathnames.
# Use 'find' to make list of srcmod/*.f90 files. mkmf uses only the first instance of any file name.
cd $sourcedir
find $exp_home/srcmods/ -maxdepth 1 -iname "*.f90" -o -iname "*.inc" -o -iname "*.c" -o -iname "*.h" > $workdir/tmp_pathnames
echo "Using the following sourcecode modifications:"
cat $workdir/tmp_pathnames
cat $pathnames >> $workdir/tmp_pathnames

cd $execdir

#$mkmf -p fms.x -t $workdir/tmp_template -c "-Duse_libMPI -Duse_netCDF -DUSE_LIMA -DSPMD -DLAND_BND_TRACERS" -a $sourcedir $workdir/tmp_pathnames $sourcedir/shared/include $sourcedir/shared/mpp/include

$mkmf -p fms.x -t $workdir/tmp_template -c "-Duse_libMPI -Duse_netCDF -DSPMD" -a $sourcedir $workdir/tmp_pathnames $sourcedir/shared/mpp/include $sourcedir/shared/include

make -f Makefile

#--------------------------------------------------------------------------------------------------------
cd $PPDIR

setenv NC_BLKSZ 64K
setenv NETCDFPATH ${NETCDF_HOME}
#setenv NETCDFPATH /n/sw/fasrcsw/apps/MPI/intel/15.0.0-fasrc01/openmpi/1.8.7-fasrc01/netcdf/4.2-fasrc01 
#gmake -j 6 -f $PPDIR/Make_fregrid_parallel
gmake -f $PPDIR/Make_fregrid_parallel
if ( $status != 0 ) exit
#--------------------------------------------------------------------------------------------------------

date
